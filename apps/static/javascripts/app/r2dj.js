// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['jquery', 'underscore', 'backbone']);

(function($, _, Backbone) {
  var App, CurrentTrackView, Router, View;
  App = {
    init: function() {
      this.root = '/';
      return this.router = new Router;
    }
  };
  _["extends"](App, Backbone.Events);
  Router = (function(_super) {

    __extends(Router, _super);

    function Router() {
      return Router.__super__.constructor.apply(this, arguments);
    }

    Router.prototype.defaults = {
      routes: {
        '': 'index'
      },
      view: new MainView
    };

    Router.prototype.initialize = function() {
      this.routes = {
        "": "index"
      };
      this.view = new R2DJView();
      return console.log(this.view);
    };

    Router.prototype.index = function() {
      this.view.render;
      return console.log("Index Visited");
    };

    Router.prototype.browse = function() {
      return console.log("Browse visited");
    };

    Router.prototype.defaultAction = function(actions) {
      return console.log("USER ACTION: ", actions);
    };

    return Router;

  })(Backbone.Router);
  View = (function(_super) {

    __extends(View, _super);

    function View() {
      return View.__super__.constructor.apply(this, arguments);
    }

    View.prototype.defaults = {
      id: '#main',
      views: {
        currentTrack: new CurrentTrack
      }
    };

    View.prototype.initialize = function() {
      return console.log('Main App Rendered');
    };

    View.prototype.render = function() {
      var view, _results;
      $(this.el).append('<p>Hello, world!</p>');
      _results = [];
      for (view in this.get('views')) {
        _results.push(view.render());
      }
      return _results;
    };

    return View;

  })(Backbone.View);
  return CurrentTrackView = (function(_super) {

    __extends(CurrentTrackView, _super);

    function CurrentTrackView() {
      return CurrentTrackView.__super__.constructor.apply(this, arguments);
    }

    CurrentTrackView.prototype.id = "#current-track-view";

    CurrentTrackView.prototype.tag = "div";

    CurrentTrackView.prototype.render = function() {
      return console.log("CurrentTrackView rendered");
    };

    return CurrentTrackView;

  })(Backbone.View);
});
